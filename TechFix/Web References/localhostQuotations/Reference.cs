//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TechFix.localhostQuotations {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QuotationsManagementServiceSoap", Namespace="http://tempuri.org/")]
    public partial class QuotationsManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQuotationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuotationByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViewAllQuotationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuotationsBySupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuotationsByStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public QuotationsManagementService() {
            this.Url = global::TechFix.Properties.Settings.Default.TechFix_localhostQuotations_QuotationsManagementService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertQuotationCompletedEventHandler InsertQuotationCompleted;
        
        /// <remarks/>
        public event UpdateQuotationStatusCompletedEventHandler UpdateQuotationStatusCompleted;
        
        /// <remarks/>
        public event GetQuotationByIDCompletedEventHandler GetQuotationByIDCompleted;
        
        /// <remarks/>
        public event ViewAllQuotationsCompletedEventHandler ViewAllQuotationsCompleted;
        
        /// <remarks/>
        public event GetQuotationsBySupplierCompletedEventHandler GetQuotationsBySupplierCompleted;
        
        /// <remarks/>
        public event GetQuotationsByStatusCompletedEventHandler GetQuotationsByStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertQuotation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertQuotation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> invID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> requestID, int supID, decimal unitPrice, decimal totalPrice, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> discount, decimal finalPrice, string status, string description) {
            object[] results = this.Invoke("InsertQuotation", new object[] {
                        invID,
                        requestID,
                        supID,
                        unitPrice,
                        totalPrice,
                        discount,
                        finalPrice,
                        status,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertQuotationAsync(System.Nullable<int> invID, System.Nullable<int> requestID, int supID, decimal unitPrice, decimal totalPrice, System.Nullable<decimal> discount, decimal finalPrice, string status, string description) {
            this.InsertQuotationAsync(invID, requestID, supID, unitPrice, totalPrice, discount, finalPrice, status, description, null);
        }
        
        /// <remarks/>
        public void InsertQuotationAsync(System.Nullable<int> invID, System.Nullable<int> requestID, int supID, decimal unitPrice, decimal totalPrice, System.Nullable<decimal> discount, decimal finalPrice, string status, string description, object userState) {
            if ((this.InsertQuotationOperationCompleted == null)) {
                this.InsertQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertQuotationOperationCompleted);
            }
            this.InvokeAsync("InsertQuotation", new object[] {
                        invID,
                        requestID,
                        supID,
                        unitPrice,
                        totalPrice,
                        discount,
                        finalPrice,
                        status,
                        description}, this.InsertQuotationOperationCompleted, userState);
        }
        
        private void OnInsertQuotationOperationCompleted(object arg) {
            if ((this.InsertQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertQuotationCompleted(this, new InsertQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateQuotationStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateQuotationStatus(int id, string status) {
            object[] results = this.Invoke("UpdateQuotationStatus", new object[] {
                        id,
                        status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQuotationStatusAsync(int id, string status) {
            this.UpdateQuotationStatusAsync(id, status, null);
        }
        
        /// <remarks/>
        public void UpdateQuotationStatusAsync(int id, string status, object userState) {
            if ((this.UpdateQuotationStatusOperationCompleted == null)) {
                this.UpdateQuotationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQuotationStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateQuotationStatus", new object[] {
                        id,
                        status}, this.UpdateQuotationStatusOperationCompleted, userState);
        }
        
        private void OnUpdateQuotationStatusOperationCompleted(object arg) {
            if ((this.UpdateQuotationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQuotationStatusCompleted(this, new UpdateQuotationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQuotationByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQuotationByID(int id) {
            object[] results = this.Invoke("GetQuotationByID", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuotationByIDAsync(int id) {
            this.GetQuotationByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void GetQuotationByIDAsync(int id, object userState) {
            if ((this.GetQuotationByIDOperationCompleted == null)) {
                this.GetQuotationByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuotationByIDOperationCompleted);
            }
            this.InvokeAsync("GetQuotationByID", new object[] {
                        id}, this.GetQuotationByIDOperationCompleted, userState);
        }
        
        private void OnGetQuotationByIDOperationCompleted(object arg) {
            if ((this.GetQuotationByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuotationByIDCompleted(this, new GetQuotationByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViewAllQuotations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ViewAllQuotations() {
            object[] results = this.Invoke("ViewAllQuotations", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ViewAllQuotationsAsync() {
            this.ViewAllQuotationsAsync(null);
        }
        
        /// <remarks/>
        public void ViewAllQuotationsAsync(object userState) {
            if ((this.ViewAllQuotationsOperationCompleted == null)) {
                this.ViewAllQuotationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnViewAllQuotationsOperationCompleted);
            }
            this.InvokeAsync("ViewAllQuotations", new object[0], this.ViewAllQuotationsOperationCompleted, userState);
        }
        
        private void OnViewAllQuotationsOperationCompleted(object arg) {
            if ((this.ViewAllQuotationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViewAllQuotationsCompleted(this, new ViewAllQuotationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQuotationsBySupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQuotationsBySupplier(int supID) {
            object[] results = this.Invoke("GetQuotationsBySupplier", new object[] {
                        supID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuotationsBySupplierAsync(int supID) {
            this.GetQuotationsBySupplierAsync(supID, null);
        }
        
        /// <remarks/>
        public void GetQuotationsBySupplierAsync(int supID, object userState) {
            if ((this.GetQuotationsBySupplierOperationCompleted == null)) {
                this.GetQuotationsBySupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuotationsBySupplierOperationCompleted);
            }
            this.InvokeAsync("GetQuotationsBySupplier", new object[] {
                        supID}, this.GetQuotationsBySupplierOperationCompleted, userState);
        }
        
        private void OnGetQuotationsBySupplierOperationCompleted(object arg) {
            if ((this.GetQuotationsBySupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuotationsBySupplierCompleted(this, new GetQuotationsBySupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQuotationsByStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQuotationsByStatus(string status) {
            object[] results = this.Invoke("GetQuotationsByStatus", new object[] {
                        status});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuotationsByStatusAsync(string status) {
            this.GetQuotationsByStatusAsync(status, null);
        }
        
        /// <remarks/>
        public void GetQuotationsByStatusAsync(string status, object userState) {
            if ((this.GetQuotationsByStatusOperationCompleted == null)) {
                this.GetQuotationsByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuotationsByStatusOperationCompleted);
            }
            this.InvokeAsync("GetQuotationsByStatus", new object[] {
                        status}, this.GetQuotationsByStatusOperationCompleted, userState);
        }
        
        private void OnGetQuotationsByStatusOperationCompleted(object arg) {
            if ((this.GetQuotationsByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuotationsByStatusCompleted(this, new GetQuotationsByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertQuotationCompletedEventHandler(object sender, InsertQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateQuotationStatusCompletedEventHandler(object sender, UpdateQuotationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQuotationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQuotationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetQuotationByIDCompletedEventHandler(object sender, GetQuotationByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuotationByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuotationByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ViewAllQuotationsCompletedEventHandler(object sender, ViewAllQuotationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViewAllQuotationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViewAllQuotationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetQuotationsBySupplierCompletedEventHandler(object sender, GetQuotationsBySupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuotationsBySupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuotationsBySupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetQuotationsByStatusCompletedEventHandler(object sender, GetQuotationsByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuotationsByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuotationsByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591