//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TechFix.localhostRequest {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RequestManagementServiceSoap", Namespace="http://tempuri.org/")]
    public partial class RequestManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRequestStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViewAllRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequestsForManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequestsForSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindRequestByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindRequestQuantityByIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RequestManagementService() {
            this.Url = global::TechFix.Properties.Settings.Default.TechFix_localhostRequest_RequestManagementService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertRequestCompletedEventHandler InsertRequestCompleted;
        
        /// <remarks/>
        public event UpdateRequestStatusCompletedEventHandler UpdateRequestStatusCompleted;
        
        /// <remarks/>
        public event DeleteRequestCompletedEventHandler DeleteRequestCompleted;
        
        /// <remarks/>
        public event ViewAllRequestsCompletedEventHandler ViewAllRequestsCompleted;
        
        /// <remarks/>
        public event GetRequestsForManagerCompletedEventHandler GetRequestsForManagerCompleted;
        
        /// <remarks/>
        public event GetRequestsForSupplierCompletedEventHandler GetRequestsForSupplierCompleted;
        
        /// <remarks/>
        public event FindRequestByIdCompletedEventHandler FindRequestByIdCompleted;
        
        /// <remarks/>
        public event FindRequestQuantityByIdCompletedEventHandler FindRequestQuantityByIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertRequest([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> invID, string itemName, string brand, string serialNo, int quantity, string reqStatus) {
            object[] results = this.Invoke("InsertRequest", new object[] {
                        invID,
                        itemName,
                        brand,
                        serialNo,
                        quantity,
                        reqStatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRequestAsync(System.Nullable<int> invID, string itemName, string brand, string serialNo, int quantity, string reqStatus) {
            this.InsertRequestAsync(invID, itemName, brand, serialNo, quantity, reqStatus, null);
        }
        
        /// <remarks/>
        public void InsertRequestAsync(System.Nullable<int> invID, string itemName, string brand, string serialNo, int quantity, string reqStatus, object userState) {
            if ((this.InsertRequestOperationCompleted == null)) {
                this.InsertRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRequestOperationCompleted);
            }
            this.InvokeAsync("InsertRequest", new object[] {
                        invID,
                        itemName,
                        brand,
                        serialNo,
                        quantity,
                        reqStatus}, this.InsertRequestOperationCompleted, userState);
        }
        
        private void OnInsertRequestOperationCompleted(object arg) {
            if ((this.InsertRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRequestCompleted(this, new InsertRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRequestStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateRequestStatus(int id, string reqStatus) {
            object[] results = this.Invoke("UpdateRequestStatus", new object[] {
                        id,
                        reqStatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRequestStatusAsync(int id, string reqStatus) {
            this.UpdateRequestStatusAsync(id, reqStatus, null);
        }
        
        /// <remarks/>
        public void UpdateRequestStatusAsync(int id, string reqStatus, object userState) {
            if ((this.UpdateRequestStatusOperationCompleted == null)) {
                this.UpdateRequestStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRequestStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateRequestStatus", new object[] {
                        id,
                        reqStatus}, this.UpdateRequestStatusOperationCompleted, userState);
        }
        
        private void OnUpdateRequestStatusOperationCompleted(object arg) {
            if ((this.UpdateRequestStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRequestStatusCompleted(this, new UpdateRequestStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteRequest(int id) {
            object[] results = this.Invoke("DeleteRequest", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRequestAsync(int id) {
            this.DeleteRequestAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteRequestAsync(int id, object userState) {
            if ((this.DeleteRequestOperationCompleted == null)) {
                this.DeleteRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRequestOperationCompleted);
            }
            this.InvokeAsync("DeleteRequest", new object[] {
                        id}, this.DeleteRequestOperationCompleted, userState);
        }
        
        private void OnDeleteRequestOperationCompleted(object arg) {
            if ((this.DeleteRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRequestCompleted(this, new DeleteRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViewAllRequests", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ViewAllRequests() {
            object[] results = this.Invoke("ViewAllRequests", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ViewAllRequestsAsync() {
            this.ViewAllRequestsAsync(null);
        }
        
        /// <remarks/>
        public void ViewAllRequestsAsync(object userState) {
            if ((this.ViewAllRequestsOperationCompleted == null)) {
                this.ViewAllRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnViewAllRequestsOperationCompleted);
            }
            this.InvokeAsync("ViewAllRequests", new object[0], this.ViewAllRequestsOperationCompleted, userState);
        }
        
        private void OnViewAllRequestsOperationCompleted(object arg) {
            if ((this.ViewAllRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViewAllRequestsCompleted(this, new ViewAllRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRequestsForManager", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRequestsForManager() {
            object[] results = this.Invoke("GetRequestsForManager", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequestsForManagerAsync() {
            this.GetRequestsForManagerAsync(null);
        }
        
        /// <remarks/>
        public void GetRequestsForManagerAsync(object userState) {
            if ((this.GetRequestsForManagerOperationCompleted == null)) {
                this.GetRequestsForManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequestsForManagerOperationCompleted);
            }
            this.InvokeAsync("GetRequestsForManager", new object[0], this.GetRequestsForManagerOperationCompleted, userState);
        }
        
        private void OnGetRequestsForManagerOperationCompleted(object arg) {
            if ((this.GetRequestsForManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequestsForManagerCompleted(this, new GetRequestsForManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRequestsForSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRequestsForSupplier(int supplierID) {
            object[] results = this.Invoke("GetRequestsForSupplier", new object[] {
                        supplierID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequestsForSupplierAsync(int supplierID) {
            this.GetRequestsForSupplierAsync(supplierID, null);
        }
        
        /// <remarks/>
        public void GetRequestsForSupplierAsync(int supplierID, object userState) {
            if ((this.GetRequestsForSupplierOperationCompleted == null)) {
                this.GetRequestsForSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequestsForSupplierOperationCompleted);
            }
            this.InvokeAsync("GetRequestsForSupplier", new object[] {
                        supplierID}, this.GetRequestsForSupplierOperationCompleted, userState);
        }
        
        private void OnGetRequestsForSupplierOperationCompleted(object arg) {
            if ((this.GetRequestsForSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequestsForSupplierCompleted(this, new GetRequestsForSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindRequestById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindRequestById(int requestId) {
            object[] results = this.Invoke("FindRequestById", new object[] {
                        requestId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindRequestByIdAsync(int requestId) {
            this.FindRequestByIdAsync(requestId, null);
        }
        
        /// <remarks/>
        public void FindRequestByIdAsync(int requestId, object userState) {
            if ((this.FindRequestByIdOperationCompleted == null)) {
                this.FindRequestByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindRequestByIdOperationCompleted);
            }
            this.InvokeAsync("FindRequestById", new object[] {
                        requestId}, this.FindRequestByIdOperationCompleted, userState);
        }
        
        private void OnFindRequestByIdOperationCompleted(object arg) {
            if ((this.FindRequestByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindRequestByIdCompleted(this, new FindRequestByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindRequestQuantityById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindRequestQuantityById(int requestId) {
            object[] results = this.Invoke("FindRequestQuantityById", new object[] {
                        requestId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindRequestQuantityByIdAsync(int requestId) {
            this.FindRequestQuantityByIdAsync(requestId, null);
        }
        
        /// <remarks/>
        public void FindRequestQuantityByIdAsync(int requestId, object userState) {
            if ((this.FindRequestQuantityByIdOperationCompleted == null)) {
                this.FindRequestQuantityByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindRequestQuantityByIdOperationCompleted);
            }
            this.InvokeAsync("FindRequestQuantityById", new object[] {
                        requestId}, this.FindRequestQuantityByIdOperationCompleted, userState);
        }
        
        private void OnFindRequestQuantityByIdOperationCompleted(object arg) {
            if ((this.FindRequestQuantityByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindRequestQuantityByIdCompleted(this, new FindRequestQuantityByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertRequestCompletedEventHandler(object sender, InsertRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateRequestStatusCompletedEventHandler(object sender, UpdateRequestStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRequestStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRequestStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteRequestCompletedEventHandler(object sender, DeleteRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ViewAllRequestsCompletedEventHandler(object sender, ViewAllRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViewAllRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViewAllRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRequestsForManagerCompletedEventHandler(object sender, GetRequestsForManagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequestsForManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequestsForManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRequestsForSupplierCompletedEventHandler(object sender, GetRequestsForSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequestsForSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequestsForSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FindRequestByIdCompletedEventHandler(object sender, FindRequestByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindRequestByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindRequestByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FindRequestQuantityByIdCompletedEventHandler(object sender, FindRequestQuantityByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindRequestQuantityByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindRequestQuantityByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591